//general commands

if(command === 'user_id'){
        message.channel.send('\`CONTENT OF THE MESSAGE\`' + message.author)
    }

    if(command === 'role'){
        message.channel.send("\`Is noxter an admin\`")
        message.channel.send(" "+message.member.roles.cache.some(r => r.name === 'Administrator'))  //@everyone
    }
    
    if(command === 'online'){
        message.channel.send("\`Local Purple Lambda is ONLINE\`")
        message.channel.send("\`Good time everyone\`")
    }

    if(command === 'offline'){
        message.channel.send("\`Local Have fun around everyone\`")
        message.channel.send("\`Purple Lambda is OFFLINE\`")
    }

//admin level command
            case 'stats':
                //use the stats method
                client.commands.get('stats').execute(message, args)
                //client.channels.cache.get('878988648916320266').send() <- doesn't really work, prolly breaking code  
                break;   
    
function gotMessage(msg) {
    if (msg.content === 'ciao') {
        msg.reply('ðŸš‚ðŸŒˆðŸ’–');
    }
}



//old code
if (typeof args[0] != String) {
            console.log("args[0]: " + args[0])

            let user_id = args[0];

            mongoose.connection.once('open', function () {
                (async () => {
                    const filter = { discord_id: user_id };

                    doc = await Player.findOne(filter);
                    if(doc){
                        //player is authorized
                    } else {
                        //player is NOT authorized
                        message.reply(`Player ${args[0]} is not authorized to play in the HUB`);
                    }

                    console.log("doc: ")
                    console.log(doc); 
                        
                })();
            })
        } else if (args[0].match(regex)) {
            console.log("args[0]: " + args[0])

            let user_id = args[0];

            mongoose.connection.once('open', function () {
                (async () => {
                    const filter = { player_id: user_id };

                    doc = await Player.findOne(filter);
                    if(doc){
                        //player is authorized
                    } else {
                        //player is NOT authorized
                        message.reply(`Player ${args[0]} is not authorized to play in the HUB`);
                    }

                    console.log("doc: ")
                    console.log(doc);                        
                })();
            })
            
        } else {
            console.log("args[0]: " + args[0])
            let nickname = args[0];

            mongoose.connection.once('open', function () {
                (async () => {
                    const filter = { nickname: nickname };

                    doc = await Player.findOne(filter);
                    if(doc){
                        //player is authorized
                    } else {
                        //player is NOT authorized
                        return message.reply(`Player ${args[0]} is not authorized to play in the HUB`);
                    }

                    console.log("doc: ")
                    console.log(doc); 
                        
                })();
            })
        }





    //if the DB token is correct and coincides with the input from the player
                        if(doc.token_auth == input_id){
                            //player auth
                            message.author.send("You are authenticated in Purple Lambda. This is your HUB link:" +` https://faceit-oauth.herokuapp.com/faceit-hub?c=${Buffer.from(user_id, 'ascii').toString('base64')}`)                      
    
                            //HERE WE GIVE ROLES     
                            const { guild } = message
               
                            //I get the member to add the verified + level + (premium ? nothing) 
                            const member = guild.members.cache.get(user_id)
    
                            //getting from guild verified and level role
                            var verifiedRole = message.guild.roles.cache.find(role => role.name === "Verified");
                            var levelRole = message.guild.roles.cache.find(role => role.name === level+" "+doc.skill_level);
    
                            //if the player has more than 2.4k elo, he will be given only 2.4k elo role
                            if(doc.player_elo > 2401){
                                var masterEloRole = message.guild.roles.cache.find(role => role.name === "2400+");
                                member.roles.add(masterEloRole)
                            }else{
                                //if not, the player will be given any rank, based on his
                                member.roles.add(levelRole)
                            }
    
                            //add verified - for sure added
                            member.roles.add(verifiedRole)
    
                            if (doc.membership ) { //if there is a membership
                                console.log('there is a sub')
                                if(doc.membership == 'csgo' || doc.membership == 'premium'){ //if the membership is any subscription, allowed to play in premium queues
                                    console.log('the sub is ' +doc.membership)
                                    var premiumRole = message.guild.roles.cache.find(role => role.name === "Premium");
                                    member.roles.add(premiumRole)
                                }
                            }
                            console.log('no sub')
                            
                            
                        }else{
                            message.author.send("The authentication has failed. This is probably because you inserted a wrong number. If the problem persists you can ask Support")
                        }    